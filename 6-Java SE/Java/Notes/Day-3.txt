Day 3 

	Agenda :
	
		Module-6
		
			Lesson 06 : Getting Started With IDE 
			
			Lesson 07 : Working with Classes and Objects
			
			Lesson 08 : Object Life Cycle and Inner Classes 
			
			
			
			Lesson 07 : Working with Classes and Objects
			
			Memory Areas

			1.   Registers           [  Processors ]

			2.   Stack Area		     [  RAM  ]

			3.   Object Heap         [  RAM  ]

			4.   Static Storage      [  RAM  ]

			5.   Constant Storage    [  RAM  ]

			6.   Method Area         [  RAM  ]

			7.   Persistence Storage [  Non RAM ]


			1. Private   ( Variable, Method & Class )

				a)  Accessible Only Within the Class [ Visibility only to Class ]

			2. Public    ( Variable, Method & Class )

				a)  Accessible to Every Class

			3. Protected ( Variable, Method & Class )
				
				a)  Accessible to All the Classes in Same Package

				b)  Accessible to All the Derived Class in Same Package or in Different Package

			4. Default ( Variable, Method & Class ) [ Package Protected / Friendly ]

				a)  Accessible to All the Classes in Same Package

				b)  Accessible to All the Derived Class in Same Package BUT NOT in Different Package


			Java Bean Specification [ Data Encapsulation ]

				1.	A class if it Contains private properties it should be accessed by Instance Methods.

				2.	Each and every property which is available can contain appropriate Getter and Setter Methods

				3.	All the Methods should be public 

				4.	Methods we write for property should Always prefixed with set Or get. And the suffixed property name Should be TitleCase.

					a.	Getter Methods : Are always used in retreiving value

						The Return type of getter Method should be same as the type of Property.

						Parameter to Getter Method should always be VOID

						Example

						public class LanguageBean 
						{
							private String name;

							public String getName()
							{
								 return this.name;
							}

						}

					b.  Setter Method : Is always used in Updating Property

						->	Setter Method should have void as Return Type

						->	Setter Method Should always have a parameter of 	
							the type of Property


						Example

							public class LanguageBean 
							{
								private String name;
					
								public void setName(String NewValue)
								{
									this.name = NewValue;
								}

							}
							
							
				Constructors
				
				Primary Usage is to Initialize Instance Variables 
				
				Types
				
					a.  Default / No Arg 
					
					b.  Parameterized 
					
					c.  Copy Constructors 
					
				Final     ( Variable, Method & Class )	
					
						Final on Variable is a Constant 
						
						Final on Method Overriding is Not Possible
						
						Final on Class Inheritance is Not Possible 
						
						
						
				Static ( Variable, Method, Block & Class )	
				
				Static Entites [ Variable or Method ]
				
				1.  Can Be Accessed Directly Via Class Name 
				
				2.  Can Even Be Accessed Via Object Reference 
				
				3.  Static Entities Can Only Access Other Static Entities [ It Cant Access Instance Variables or Instance Methods ]
				
				4.  Instance Method Not Only Can Access Instance Variables and Other Instance Methods, Apart from this, It Can Even Access Static Variables and Static Methods [ How is Possible ( THIS ) ]
					
				
					
					
					
					
				
				

					